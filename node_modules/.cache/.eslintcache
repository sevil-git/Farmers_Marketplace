[{"F:\\Farmers_Marketplace1\\src\\index.js":"1","F:\\Farmers_Marketplace1\\src\\serviceWorker.js":"2","F:\\Farmers_Marketplace1\\src\\components\\App.js":"3","F:\\Farmers_Marketplace1\\src\\components\\Farmer\\Farmer.js":"4","F:\\Farmers_Marketplace1\\src\\components\\Login\\Login.js":"5","F:\\Farmers_Marketplace1\\src\\components\\Main\\Main.js":"6","F:\\Farmers_Marketplace1\\src\\components\\QtLogin\\QtLogin.js":"7","F:\\Farmers_Marketplace1\\src\\components\\Register\\Register.js":"8","F:\\Farmers_Marketplace1\\src\\components\\Navbar\\Navbar.js":"9","F:\\Farmers_Marketplace1\\src\\components\\QtRegister\\QtRegister.js":"10","F:\\Farmers_Marketplace1\\src\\components\\QTesting\\QTesting.js":"11"},{"size":517,"mtime":1729323962727,"results":"12","hashOfConfig":"13"},{"size":5086,"mtime":1729318534315,"results":"14","hashOfConfig":"13"},{"size":10092,"mtime":1729324706636,"results":"15","hashOfConfig":"13"},{"size":4225,"mtime":1729318534310,"results":"16","hashOfConfig":"13"},{"size":3161,"mtime":1729324709199,"results":"17","hashOfConfig":"13"},{"size":674,"mtime":1729324704734,"results":"18","hashOfConfig":"13"},{"size":3076,"mtime":1729318675800,"results":"19","hashOfConfig":"13"},{"size":3671,"mtime":1729320418594,"results":"20","hashOfConfig":"13"},{"size":1428,"mtime":1729318534311,"results":"21","hashOfConfig":"13"},{"size":2558,"mtime":1729318534313,"results":"22","hashOfConfig":"13"},{"size":4993,"mtime":1729318534312,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sfprp",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},"F:\\Farmers_Marketplace1\\src\\index.js",[],"F:\\Farmers_Marketplace1\\src\\serviceWorker.js",[],["51","52"],"F:\\Farmers_Marketplace1\\src\\components\\App.js",["53","54","55","56","57","58","59","60","61","62","63"],"F:\\Farmers_Marketplace1\\src\\components\\Farmer\\Farmer.js",["64","65","66","67"],"import React, { Component  } from 'react';\r\nimport { Redirect, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nclass Farmer extends Component{\r\n\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: 'Dharwad',\r\n      islogout: false\r\n    };\r\n  }\r\n\r\n  handleChange = (event) =>\r\n    this.setState({value: event.target.value});\r\n\r\n    signOut = () => {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"session\");\r\n      this.setState({\r\n        islogout: true\r\n      });\r\n    };\r\n\r\n    render() {\r\n      if (!localStorage.getItem(\"token\")) {\r\n        return <Redirect to=\"/Login\" />;\r\n      }\r\n      if (this.state.islogout) {\r\n        return <Redirect to=\"/Login\" />;\r\n      }\r\n        return (\r\n          <div id=\"content\">\r\n            <button onClick={this.signOut} href=\"#\">\r\n              Sign Out\r\n            </button>\r\n            <h1>Add Product</h1>\r\n            <form onSubmit={(event) => {\r\n              event.preventDefault()\r\n              const id = localStorage.getItem(\"session\")\r\n              const name = this.productName.value\r\n              const city = this.state.value\r\n              const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\r\n              this.props.createProduct(id,name, price, city)\r\n            }}>\r\n              <div className=\"form-group mr-sm-2\">\r\n                <input\r\n                  id=\"productName\"\r\n                  type=\"text\"\r\n                  ref={(input) => { this.productName = input }}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Product Name\"\r\n                  required />\r\n              </div>\r\n              <div className=\"form-group mr-sm-2\">\r\n                <input\r\n                  id=\"productPrice\"\r\n                  type=\"text\"\r\n                  ref={(input) => { this.productPrice = input }}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Product Price\"\r\n                  required />\r\n              </div>\r\n                  <form>\r\n                  <label>Select City:  </label>\r\n                  <select value={this.state.value1} onChange={this.handleChange}>\r\n\t\t    <option value=\"Dharwad\">Dharwad</option>\r\n\t\t    <option value=\"Haliyal\">Haliyal</option>\r\n  \t\t  <option value=\"Dandeli\">Dandeli</option>\r\n\t    \t</select>\r\n                  {/* <select >\r\n                  <option value=\"Dharwad\" ref={(value) => { this.productCity = value }}>Dharwad</option>\r\n                  <option value=\"Haliyal\" ref={(value) => { this.productCity = value }}>Haliyal</option>\r\n                  <option value=\"Dandeli\" ref={(value) => { this.productCity = value }}>Dandeli</option>\r\n                </select> */}\r\n                </form>\r\n              <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\r\n            </form>\r\n            <p>&nbsp;</p>\r\n            <h2>Product List</h2>\r\n            <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Product ID</th>\r\n            <th scope=\"col\">Farmer ID</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Price</th>\r\n            <th scope=\"col\">Owner</th>\r\n            <th scope=\"col\">City</th>\r\n            <th scope=\"col\">Is this sold</th>\r\n            <th scope=\"col\">Quality approved</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id=\"productList\">\r\n          { this.props.products.map((product, key) => {\r\n            return(product.farmerID.toString()==localStorage.getItem(\"session\")\r\n              ?\r\n              <tr key={key}>\r\n                <th scope=\"row\">{product.id.toString()}</th>\r\n                <th scope=\"roe\">{product.farmerID.toString()}</th>\r\n                <td>{product.name}</td>\r\n                <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\r\n                <td>{product.owner}</td>\r\n                <td>{product.city}</td>\r\n                <td>{product.purchased.toString()}</td>\r\n                <td>{product.approved.toString()}</td>\r\n              </tr>\r\n              :null)\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    \r\n    \r\n\r\n}\r\n\r\nexport default Farmer;","F:\\Farmers_Marketplace1\\src\\components\\Login\\Login.js",[],"F:\\Farmers_Marketplace1\\src\\components\\Main\\Main.js",[],"F:\\Farmers_Marketplace1\\src\\components\\QtLogin\\QtLogin.js",["68"],"import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass QtLogin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      islogged: false,\r\n      loginParams: {\r\n        user_id: \"\",\r\n        user_password: \"\"\r\n      },\r\n      errorMsg: \"\"\r\n    };\r\n  }\r\n\r\n  handleFormChange = event => {\r\n    let loginParamsNew = { ...this.state.loginParams };\r\n    let val = event.target.value;\r\n    loginParamsNew[event.target.name] = val;\r\n    this.setState({\r\n      loginParams: loginParamsNew\r\n    });\r\n  };\r\n\r\n  login = () => {\r\n    let user_id = this.state.loginParams.user_id;\r\n    let user_password = this.state.loginParams.user_password;\r\n\r\n    // Store session token and user ID\r\n    localStorage.setItem(\"qtoken\", \"T\");\r\n    localStorage.setItem(\"qsession\", user_id);\r\n\r\n    console.log(localStorage.getItem(\"qtoken\"));\r\n    console.log(localStorage.getItem(\"qsession\"));\r\n\r\n    this.setState({\r\n      islogged: true\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    const { user_id, user_password } = this.state.loginParams;\r\n    const matchedQtUser = this.props.qtestings.find(\r\n      (qtesting) => qtesting.name === user_id && qtesting.city === user_password\r\n    );\r\n\r\n    if (matchedQtUser) {\r\n      this.login();\r\n    } else {\r\n      this.setState({ errorMsg: \"Invalid name or city\" });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (localStorage.getItem(\"qtoken\")) {\r\n      return <Redirect to=\"/QTesting\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"form-signin\">\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"form-group mr-sm-2\">\r\n                <input\r\n                  id=\"FarmerID\"\r\n                  name=\"user_id\"\r\n                  type=\"text\"\r\n                  ref={(input) => { this.FarmerID = input }}\r\n                  onChange={this.handleFormChange}\r\n                  className=\"form-control\"\r\n                  placeholder=\"name\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group mr-sm-2\">\r\n                <input\r\n                  id=\"FarmerID\"\r\n                  name=\"user_password\"\r\n                  type=\"password\"\r\n                  ref={(input) => { this.PhoneNo = input }}\r\n                  onChange={this.handleFormChange}\r\n                  className=\"form-control\"\r\n                  placeholder=\"city\"\r\n                  required\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.errorMsg && (\r\n            <div className=\"alert alert-danger mt-2\">{this.state.errorMsg}</div>\r\n          )}\r\n        </form>\r\n\r\n        <p>Don't have Account..? <a href=\"/QtRegister\">Click here</a></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QtLogin;\r\n","F:\\Farmers_Marketplace1\\src\\components\\Register\\Register.js",[],"F:\\Farmers_Marketplace1\\src\\components\\Navbar\\Navbar.js",[],"F:\\Farmers_Marketplace1\\src\\components\\QtRegister\\QtRegister.js",["69","70","71"],"import React, { Component  } from 'react';\r\nimport { Redirect, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nclass QtRegister extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: 'Dharwad'};\r\n  }\r\n\r\n  handleChange = (event) =>\r\n    this.setState({value: event.target.value});\r\n\r\n    render() {\r\n      if (localStorage.getItem(\"qtoken\")) {\r\n        return <Redirect to=\"/QTesting\" />;\r\n      }\r\n        return (\r\n          <div id=\"content\">\r\n            <h1>Qt Register</h1>\r\n            <form onSubmit={(event) => {\r\n              event.preventDefault()\r\n              const name = this.qtName.value\r\n              const city = this.state.value\r\n              this.props.qtestingRegister(name, city)\r\n            }}>\r\n              <div className=\"form-group mr-sm-2\">\r\n                <input\r\n                  id=\"qtName\"\r\n                  type=\"text\"\r\n                  ref={(input) => { this.qtName = input }}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Name\"\r\n                  required />\r\n              </div>\r\n                  <form>\r\n                  <label>Select City:  </label>\r\n                  <select value={this.state.value1} onChange={this.handleChange}>\r\n\t\t    <option value=\"Dharwad\">Dharwad</option>\r\n\t\t    <option value=\"Haliyal\">Haliyal</option>\r\n  \t\t  <option value=\"Dandeli\">Dandeli</option>\r\n\t    \t</select>\r\n                </form>\r\n              <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n            </form>\r\n            <p>&nbsp;</p>\r\n            {/* {this.props.qtestings.map((qtesting, key) => {\r\n                return(\r\n                  <p>Your Register ID is {qtesting.id}</p>\r\n                  )\r\n              })} */}\r\n \r\n            {/* <h2>Buy Product</h2>\r\n\t\t    <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">City</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"productList\">\r\n            { this.props.qtestings.map((qtesting, key) => {\r\n              return(\r\n                <tr key={key}>\r\n                  <th scope=\"row\">{qtesting.id.toString()}</th>\r\n                  <td>{qtesting.name}</td>\r\n                  <td>{qtesting.city}</td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>  */}\r\n<p>Login <a href=\"/QtLogin\">Click here</a></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QtRegister;","F:\\Farmers_Marketplace1\\src\\components\\QTesting\\QTesting.js",["72","73","74","75","76","77","78"],"import React, { Component  } from 'react';\r\nimport { Redirect, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass QTesting extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: 'Dharwad',\r\n      islogout: false\r\n    };\r\n  }\r\n\r\n  handleChange = (event) =>\r\n    this.setState({value: event.target.value});\r\n\r\n    signOut = () => {\r\n      localStorage.removeItem(\"qtoken\");\r\n      localStorage.removeItem(\"qsession\");\r\n      this.setState({\r\n        islogout: true\r\n      });\r\n    };\r\n\r\n    render() {\r\n      if (!localStorage.getItem(\"qtoken\")) {\r\n        return <Redirect to=\"/QtLogin\" />;\r\n      }\r\n      if (this.state.islogout) {\r\n        return <Redirect to=\"/QtLogin\" />;\r\n      }\r\n      return (\r\n      <div id=\"content\">\r\n        <button onClick={this.signOut} href=\"#\">\r\n              Sign Out\r\n            </button>\r\n      <form onSubmit={(event) => {\r\n        event.preventDefault()\r\n        const id = this.productID.value\r\n        const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\r\n        this.props.qtapproval(id, price)\r\n        }}>\r\n        <div className=\"form-group mr-sm-2\">\r\n          <input\r\n            id=\"productID\"\r\n            type=\"text\"\r\n            ref={(input) => { this.productID = input }}\r\n            placeholder=\"Enter the Product ID\"\r\n            required />\r\n          <a>&nbsp;</a>\r\n          <input\r\n            id=\"productName\"\r\n            type=\"text\"\r\n            ref={(input) => { this.productPrice = input }}          \r\n            placeholder=\"Approved Price\"\r\n            required />\r\n          <a>&nbsp;</a>\r\n          <button type=\"submit\" className=\"btn btn-primary\">approve Product</button>\r\n        </div>\r\n      </form>\r\n      <form>\r\n  \t\t  <label>Select City:  </label>\r\n\t  \t  <select value={this.state.value1} onChange={this.handleChange}>\r\n\t\t      <option value=\"Dharwad\">Dharwad</option>\r\n\t  \t    <option value=\"Haliyal\">Haliyal</option>\r\n  \t  \t  <option value=\"Dandeli\">Dandeli</option>\r\n\t    \t</select>\r\n        {/* <div className=\"form-group mr-sm-2\">\r\n          <input\r\n            id=\"productID\"\r\n            type=\"text\"\r\n            ref={(input) => { this.productId = input }}\r\n            placeholder=\"Enter the Farmer ID\"\r\n            required />\r\n          <a>&nbsp;</a>\r\n          <a>&nbsp;</a>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Search</button>\r\n        </div> */}\r\n\t    </form>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Product ID</th>\r\n            <th scope=\"col\">Farmer ID</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Price</th>\r\n            <th scope=\"col\">Owner</th>\r\n            <th scope=\"col\">City</th>\r\n            <th scope=\"col\">Market status</th>\r\n            <th scope=\"col\">Quality status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id=\"productList\">\r\n          { this.props.products.map((product, key) => {\r\n            return(!product.approved && product.city==this.state.value\r\n              ?\r\n              <tr key={key}>\r\n                <th scope=\"row\">{product.id.toString()}</th>\r\n                <th scope=\"roe\">{product.farmerID.toString()}</th>\r\n                <td>{product.name}</td>\r\n                <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\r\n                <td>{product.owner}</td>\r\n                <td>{product.city}</td>\r\n                <td>{product.purchased.toString()}</td>\r\n                <td>{product.approved.toString()}</td>\r\n              </tr>\r\n              :null)\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <p>&nbsp;</p>\r\n      <h1>Approved Products</h1>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Product ID</th>\r\n            <th scope=\"col\">Farmer ID</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Price</th>\r\n            <th scope=\"col\">Owner</th>\r\n            <th scope=\"col\">City</th>\r\n            <th scope=\"col\">Market status</th>\r\n            <th scope=\"col\">Quality status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id=\"productList\">\r\n          { this.props.products.map((product, key) => {\r\n            return(product.approved && product.city==this.state.value\r\n              ?\r\n              <tr key={key}>\r\n                <th scope=\"row\">{product.id.toString()}</th>\r\n                <th scope=\"roe\">{product.farmerID.toString()}</th>\r\n                <td>{product.name}</td>\r\n                <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\r\n                <td>{product.owner}</td>\r\n                <td>{product.city}</td>\r\n                <td>{product.purchased.toString()}</td>\r\n                <td>{product.approved.toString()}</td>\r\n              </tr>\r\n              :null)\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <p>&nbsp;</p>\r\n    </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default QTesting;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":63,"column":16,"nodeType":"85","messageId":"89","endLine":63,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":70,"column":16,"nodeType":"85","messageId":"89","endLine":70,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":161,"column":67,"nodeType":"92","endLine":161,"endColumn":80},{"ruleId":"90","severity":1,"message":"91","line":171,"column":68,"nodeType":"92","endLine":171,"endColumn":79},{"ruleId":"90","severity":1,"message":"91","line":182,"column":69,"nodeType":"92","endLine":182,"endColumn":81},{"ruleId":"90","severity":1,"message":"91","line":193,"column":70,"nodeType":"92","endLine":193,"endColumn":92},{"ruleId":"90","severity":1,"message":"91","line":203,"column":67,"nodeType":"92","endLine":203,"endColumn":89},{"ruleId":"90","severity":1,"message":"91","line":214,"column":69,"nodeType":"92","endLine":214,"endColumn":91},{"ruleId":"90","severity":1,"message":"91","line":226,"column":70,"nodeType":"92","endLine":226,"endColumn":92},{"ruleId":"90","severity":1,"message":"91","line":236,"column":72,"nodeType":"92","endLine":236,"endColumn":94},{"ruleId":"83","severity":1,"message":"93","line":2,"column":20,"nodeType":"85","messageId":"86","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"94","line":2,"column":28,"nodeType":"85","messageId":"86","endLine":2,"endColumn":33},{"ruleId":"83","severity":1,"message":"95","line":2,"column":35,"nodeType":"85","messageId":"86","endLine":2,"endColumn":39},{"ruleId":"96","severity":1,"message":"97","line":98,"column":47,"nodeType":"98","messageId":"99","endLine":98,"endColumn":49},{"ruleId":"83","severity":1,"message":"100","line":28,"column":9,"nodeType":"85","messageId":"86","endLine":28,"endColumn":22},{"ruleId":"83","severity":1,"message":"93","line":2,"column":20,"nodeType":"85","messageId":"86","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"94","line":2,"column":28,"nodeType":"85","messageId":"86","endLine":2,"endColumn":33},{"ruleId":"83","severity":1,"message":"95","line":2,"column":35,"nodeType":"85","messageId":"86","endLine":2,"endColumn":39},{"ruleId":"83","severity":1,"message":"93","line":2,"column":20,"nodeType":"85","messageId":"86","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"94","line":2,"column":28,"nodeType":"85","messageId":"86","endLine":2,"endColumn":33},{"ruleId":"83","severity":1,"message":"95","line":2,"column":35,"nodeType":"85","messageId":"86","endLine":2,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":49,"column":11,"nodeType":"103","endLine":49,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":56,"column":11,"nodeType":"103","endLine":56,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":94,"column":53,"nodeType":"98","messageId":"99","endLine":94,"endColumn":55},{"ruleId":"96","severity":1,"message":"97","line":127,"column":52,"nodeType":"98","messageId":"99","endLine":127,"endColumn":54},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-redeclare","'i' is already defined.","redeclared","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user_password' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]