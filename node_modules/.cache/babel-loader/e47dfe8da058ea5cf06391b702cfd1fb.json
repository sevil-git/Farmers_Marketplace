{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n/** @file index.js\r\n * @authors:\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\n\"use strict\";\n\nvar _ = require('underscore');\nvar errors = require('web3-core-helpers').errors;\nvar oboe = require('oboe');\nvar IpcProvider = function IpcProvider(path, net) {\n  var _this = this;\n  this.responseCallbacks = {};\n  this.notificationCallbacks = [];\n  this.path = path;\n  this.connected = false;\n  this.connection = net.connect({\n    path: this.path\n  });\n  this.addDefaultEvents();\n  // LISTEN FOR CONNECTION RESPONSES\n  var callback = function (result) {\n    /*jshint maxcomplexity: 6 */\n    var id = null;\n    // get the id which matches the returned id\n    if (_.isArray(result)) {\n      result.forEach(function (load) {\n        if (_this.responseCallbacks[load.id]) id = load.id;\n      });\n    } else {\n      id = result.id;\n    }\n    // notification\n    if (!id && result.method.indexOf('_subscription') !== -1) {\n      _this.notificationCallbacks.forEach(function (callback) {\n        if (_.isFunction(callback)) callback(result);\n      });\n      // fire the callback\n    } else if (_this.responseCallbacks[id]) {\n      _this.responseCallbacks[id](null, result);\n      delete _this.responseCallbacks[id];\n    }\n  };\n  // use oboe.js for Sockets\n  if (net.constructor.name === 'Socket') {\n    oboe(this.connection).done(callback);\n  } else {\n    this.connection.on('data', function (data) {\n      _this._parseResponse(data.toString()).forEach(callback);\n    });\n  }\n};\n/**\r\nWill add the error and end event to timeout existing calls\r\n\r\n@method addDefaultEvents\r\n*/\nIpcProvider.prototype.addDefaultEvents = function () {\n  var _this = this;\n  this.connection.on('connect', function () {\n    _this.connected = true;\n  });\n  this.connection.on('close', function () {\n    _this.connected = false;\n  });\n  this.connection.on('error', function () {\n    _this._timeout();\n  });\n  this.connection.on('end', function () {\n    _this._timeout();\n  });\n  this.connection.on('timeout', function () {\n    _this._timeout();\n  });\n};\n/**\r\n Will parse the response and make an array out of it.\r\n\r\n NOTE, this exists for backwards compatibility reasons.\r\n\r\n @method _parseResponse\r\n @param {String} data\r\n */\nIpcProvider.prototype._parseResponse = function (data) {\n  var _this = this,\n    returnValues = [];\n  // DE-CHUNKER\n  var dechunkedData = data.replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n  .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n  .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n  .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n  .split('|--|');\n  dechunkedData.forEach(function (data) {\n    // prepend the last chunk\n    if (_this.lastChunk) data = _this.lastChunk + data;\n    var result = null;\n    try {\n      result = JSON.parse(data);\n    } catch (e) {\n      _this.lastChunk = data;\n      // start timeout to cancel all requests\n      clearTimeout(_this.lastChunkTimeout);\n      _this.lastChunkTimeout = setTimeout(function () {\n        _this._timeout();\n        throw errors.InvalidResponse(data);\n      }, 1000 * 15);\n      return;\n    }\n    // cancel timeout and set chunk to null\n    clearTimeout(_this.lastChunkTimeout);\n    _this.lastChunk = null;\n    if (result) returnValues.push(result);\n  });\n  return returnValues;\n};\n/**\r\nGet the adds a callback to the responseCallbacks object,\r\nwhich will be called if a response matching the response Id will arrive.\r\n\r\n@method _addResponseCallback\r\n*/\nIpcProvider.prototype._addResponseCallback = function (payload, callback) {\n  var id = payload.id || payload[0].id;\n  var method = payload.method || payload[0].method;\n  this.responseCallbacks[id] = callback;\n  this.responseCallbacks[id].method = method;\n};\n/**\r\nTimeout all requests when the end/error event is fired\r\n\r\n@method _timeout\r\n*/\nIpcProvider.prototype._timeout = function () {\n  for (var key in this.responseCallbacks) {\n    if (this.responseCallbacks.hasOwnProperty(key)) {\n      this.responseCallbacks[key](errors.InvalidConnection('on IPC'));\n      delete this.responseCallbacks[key];\n    }\n  }\n};\n/**\r\n Try to reconnect\r\n\r\n @method reconnect\r\n */\nIpcProvider.prototype.reconnect = function () {\n  this.connection.connect({\n    path: this.path\n  });\n};\nIpcProvider.prototype.send = function (payload, callback) {\n  // try reconnect, when connection is gone\n  if (!this.connection.writable) this.connection.connect({\n    path: this.path\n  });\n  this.connection.write(JSON.stringify(payload));\n  this._addResponseCallback(payload, callback);\n};\n/**\r\nSubscribes to provider events.provider\r\n\r\n@method on\r\n@param {String} type    'notification', 'connect', 'error', 'end' or 'data'\r\n@param {Function} callback   the callback to call\r\n*/\nIpcProvider.prototype.on = function (type, callback) {\n  if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.push(callback);\n      break;\n    // adds error, end, timeout, connect\n    default:\n      this.connection.on(type, callback);\n      break;\n  }\n};\n/**\r\n Subscribes to provider events.provider\r\n\r\n @method on\r\n @param {String} type    'connect', 'error', 'end' or 'data'\r\n @param {Function} callback   the callback to call\r\n */\nIpcProvider.prototype.once = function (type, callback) {\n  if (typeof callback !== 'function') throw new Error('The second parameter callback must be a function.');\n  this.connection.once(type, callback);\n};\n/**\r\nRemoves event listener\r\n\r\n@method removeListener\r\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\r\n@param {Function} callback   the callback to call\r\n*/\nIpcProvider.prototype.removeListener = function (type, callback) {\n  var _this = this;\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks.forEach(function (cb, index) {\n        if (cb === callback) _this.notificationCallbacks.splice(index, 1);\n      });\n      break;\n    default:\n      this.connection.removeListener(type, callback);\n      break;\n  }\n};\n/**\r\nRemoves all event listeners\r\n\r\n@method removeAllListeners\r\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\r\n*/\nIpcProvider.prototype.removeAllListeners = function (type) {\n  switch (type) {\n    case 'data':\n      this.notificationCallbacks = [];\n      break;\n    default:\n      this.connection.removeAllListeners(type);\n      break;\n  }\n};\n/**\r\nResets the providers, clears all callbacks\r\n\r\n@method reset\r\n*/\nIpcProvider.prototype.reset = function () {\n  this._timeout();\n  this.notificationCallbacks = [];\n  this.connection.removeAllListeners('error');\n  this.connection.removeAllListeners('end');\n  this.connection.removeAllListeners('timeout');\n  this.addDefaultEvents();\n};\n/**\r\n * Returns the desired boolean.\r\n *\r\n * @method supportsSubscriptions\r\n * @returns {boolean}\r\n */\nIpcProvider.prototype.supportsSubscriptions = function () {\n  return true;\n};\nmodule.exports = IpcProvider;","map":{"version":3,"names":["_","require","errors","oboe","IpcProvider","path","net","_this","responseCallbacks","notificationCallbacks","connected","connection","connect","addDefaultEvents","callback","result","id","isArray","forEach","load","method","indexOf","isFunction","constructor","name","done","on","data","_parseResponse","toString","prototype","_timeout","returnValues","dechunkedData","replace","split","lastChunk","JSON","parse","e","clearTimeout","lastChunkTimeout","setTimeout","InvalidResponse","push","_addResponseCallback","payload","key","hasOwnProperty","InvalidConnection","reconnect","send","writable","write","stringify","type","Error","once","removeListener","cb","index","splice","removeAllListeners","reset","supportsSubscriptions","module","exports"],"sources":["F:/Farmers_Marketplace1/node_modules/web3-providers-ipc/lib/index.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/** @file index.js\r\n * @authors:\r\n *   Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\n\"use strict\";\r\nvar _ = require('underscore');\r\nvar errors = require('web3-core-helpers').errors;\r\nvar oboe = require('oboe');\r\nvar IpcProvider = function IpcProvider(path, net) {\r\n    var _this = this;\r\n    this.responseCallbacks = {};\r\n    this.notificationCallbacks = [];\r\n    this.path = path;\r\n    this.connected = false;\r\n    this.connection = net.connect({ path: this.path });\r\n    this.addDefaultEvents();\r\n    // LISTEN FOR CONNECTION RESPONSES\r\n    var callback = function (result) {\r\n        /*jshint maxcomplexity: 6 */\r\n        var id = null;\r\n        // get the id which matches the returned id\r\n        if (_.isArray(result)) {\r\n            result.forEach(function (load) {\r\n                if (_this.responseCallbacks[load.id])\r\n                    id = load.id;\r\n            });\r\n        }\r\n        else {\r\n            id = result.id;\r\n        }\r\n        // notification\r\n        if (!id && result.method.indexOf('_subscription') !== -1) {\r\n            _this.notificationCallbacks.forEach(function (callback) {\r\n                if (_.isFunction(callback))\r\n                    callback(result);\r\n            });\r\n            // fire the callback\r\n        }\r\n        else if (_this.responseCallbacks[id]) {\r\n            _this.responseCallbacks[id](null, result);\r\n            delete _this.responseCallbacks[id];\r\n        }\r\n    };\r\n    // use oboe.js for Sockets\r\n    if (net.constructor.name === 'Socket') {\r\n        oboe(this.connection)\r\n            .done(callback);\r\n    }\r\n    else {\r\n        this.connection.on('data', function (data) {\r\n            _this._parseResponse(data.toString()).forEach(callback);\r\n        });\r\n    }\r\n};\r\n/**\r\nWill add the error and end event to timeout existing calls\r\n\r\n@method addDefaultEvents\r\n*/\r\nIpcProvider.prototype.addDefaultEvents = function () {\r\n    var _this = this;\r\n    this.connection.on('connect', function () {\r\n        _this.connected = true;\r\n    });\r\n    this.connection.on('close', function () {\r\n        _this.connected = false;\r\n    });\r\n    this.connection.on('error', function () {\r\n        _this._timeout();\r\n    });\r\n    this.connection.on('end', function () {\r\n        _this._timeout();\r\n    });\r\n    this.connection.on('timeout', function () {\r\n        _this._timeout();\r\n    });\r\n};\r\n/**\r\n Will parse the response and make an array out of it.\r\n\r\n NOTE, this exists for backwards compatibility reasons.\r\n\r\n @method _parseResponse\r\n @param {String} data\r\n */\r\nIpcProvider.prototype._parseResponse = function (data) {\r\n    var _this = this, returnValues = [];\r\n    // DE-CHUNKER\r\n    var dechunkedData = data\r\n        .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\r\n        .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\r\n        .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\r\n        .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\r\n        .split('|--|');\r\n    dechunkedData.forEach(function (data) {\r\n        // prepend the last chunk\r\n        if (_this.lastChunk)\r\n            data = _this.lastChunk + data;\r\n        var result = null;\r\n        try {\r\n            result = JSON.parse(data);\r\n        }\r\n        catch (e) {\r\n            _this.lastChunk = data;\r\n            // start timeout to cancel all requests\r\n            clearTimeout(_this.lastChunkTimeout);\r\n            _this.lastChunkTimeout = setTimeout(function () {\r\n                _this._timeout();\r\n                throw errors.InvalidResponse(data);\r\n            }, 1000 * 15);\r\n            return;\r\n        }\r\n        // cancel timeout and set chunk to null\r\n        clearTimeout(_this.lastChunkTimeout);\r\n        _this.lastChunk = null;\r\n        if (result)\r\n            returnValues.push(result);\r\n    });\r\n    return returnValues;\r\n};\r\n/**\r\nGet the adds a callback to the responseCallbacks object,\r\nwhich will be called if a response matching the response Id will arrive.\r\n\r\n@method _addResponseCallback\r\n*/\r\nIpcProvider.prototype._addResponseCallback = function (payload, callback) {\r\n    var id = payload.id || payload[0].id;\r\n    var method = payload.method || payload[0].method;\r\n    this.responseCallbacks[id] = callback;\r\n    this.responseCallbacks[id].method = method;\r\n};\r\n/**\r\nTimeout all requests when the end/error event is fired\r\n\r\n@method _timeout\r\n*/\r\nIpcProvider.prototype._timeout = function () {\r\n    for (var key in this.responseCallbacks) {\r\n        if (this.responseCallbacks.hasOwnProperty(key)) {\r\n            this.responseCallbacks[key](errors.InvalidConnection('on IPC'));\r\n            delete this.responseCallbacks[key];\r\n        }\r\n    }\r\n};\r\n/**\r\n Try to reconnect\r\n\r\n @method reconnect\r\n */\r\nIpcProvider.prototype.reconnect = function () {\r\n    this.connection.connect({ path: this.path });\r\n};\r\nIpcProvider.prototype.send = function (payload, callback) {\r\n    // try reconnect, when connection is gone\r\n    if (!this.connection.writable)\r\n        this.connection.connect({ path: this.path });\r\n    this.connection.write(JSON.stringify(payload));\r\n    this._addResponseCallback(payload, callback);\r\n};\r\n/**\r\nSubscribes to provider events.provider\r\n\r\n@method on\r\n@param {String} type    'notification', 'connect', 'error', 'end' or 'data'\r\n@param {Function} callback   the callback to call\r\n*/\r\nIpcProvider.prototype.on = function (type, callback) {\r\n    if (typeof callback !== 'function')\r\n        throw new Error('The second parameter callback must be a function.');\r\n    switch (type) {\r\n        case 'data':\r\n            this.notificationCallbacks.push(callback);\r\n            break;\r\n        // adds error, end, timeout, connect\r\n        default:\r\n            this.connection.on(type, callback);\r\n            break;\r\n    }\r\n};\r\n/**\r\n Subscribes to provider events.provider\r\n\r\n @method on\r\n @param {String} type    'connect', 'error', 'end' or 'data'\r\n @param {Function} callback   the callback to call\r\n */\r\nIpcProvider.prototype.once = function (type, callback) {\r\n    if (typeof callback !== 'function')\r\n        throw new Error('The second parameter callback must be a function.');\r\n    this.connection.once(type, callback);\r\n};\r\n/**\r\nRemoves event listener\r\n\r\n@method removeListener\r\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\r\n@param {Function} callback   the callback to call\r\n*/\r\nIpcProvider.prototype.removeListener = function (type, callback) {\r\n    var _this = this;\r\n    switch (type) {\r\n        case 'data':\r\n            this.notificationCallbacks.forEach(function (cb, index) {\r\n                if (cb === callback)\r\n                    _this.notificationCallbacks.splice(index, 1);\r\n            });\r\n            break;\r\n        default:\r\n            this.connection.removeListener(type, callback);\r\n            break;\r\n    }\r\n};\r\n/**\r\nRemoves all event listeners\r\n\r\n@method removeAllListeners\r\n@param {String} type    'data', 'connect', 'error', 'end' or 'data'\r\n*/\r\nIpcProvider.prototype.removeAllListeners = function (type) {\r\n    switch (type) {\r\n        case 'data':\r\n            this.notificationCallbacks = [];\r\n            break;\r\n        default:\r\n            this.connection.removeAllListeners(type);\r\n            break;\r\n    }\r\n};\r\n/**\r\nResets the providers, clears all callbacks\r\n\r\n@method reset\r\n*/\r\nIpcProvider.prototype.reset = function () {\r\n    this._timeout();\r\n    this.notificationCallbacks = [];\r\n    this.connection.removeAllListeners('error');\r\n    this.connection.removeAllListeners('end');\r\n    this.connection.removeAllListeners('timeout');\r\n    this.addDefaultEvents();\r\n};\r\n/**\r\n * Returns the desired boolean.\r\n *\r\n * @method supportsSubscriptions\r\n * @returns {boolean}\r\n */\r\nIpcProvider.prototype.supportsSubscriptions = function () {\r\n    return true;\r\n};\r\nmodule.exports = IpcProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}