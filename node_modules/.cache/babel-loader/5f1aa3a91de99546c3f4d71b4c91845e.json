{"ast":null,"code":"\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, splitSignature, stripZeros } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction handleAddress(value) {\n  if (value === \"0x\") {\n    return null;\n  }\n  return getAddress(value);\n}\nfunction handleNumber(value) {\n  if (value === \"0x\") {\n    return Zero;\n  }\n  return BigNumber.from(value);\n}\n// Legacy Transaction Fields\nconst transactionFields = [{\n  name: \"nonce\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasPrice\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"gasLimit\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"to\",\n  length: 20\n}, {\n  name: \"value\",\n  maxLength: 32,\n  numeric: true\n}, {\n  name: \"data\"\n}];\nconst allowedTransactionKeys = {\n  chainId: true,\n  data: true,\n  gasLimit: true,\n  gasPrice: true,\n  nonce: true,\n  to: true,\n  value: true\n};\nexport function computeAddress(key) {\n  const publicKey = computePublicKey(key);\n  return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\nexport function recoverAddress(digest, signature) {\n  return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\nfunction formatNumber(value, name) {\n  const result = stripZeros(BigNumber.from(value).toHexString());\n  if (result.length > 32) {\n    logger.throwArgumentError(\"invalid length for \" + name, \"transaction:\" + name, value);\n  }\n  return result;\n}\nfunction accessSetify(addr, storageKeys) {\n  return {\n    address: getAddress(addr),\n    storageKeys: (storageKeys || []).map((storageKey, index) => {\n      if (hexDataLength(storageKey) !== 32) {\n        logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${addr}:${index}]`, storageKey);\n      }\n      return storageKey.toLowerCase();\n    })\n  };\n}\nexport function accessListify(value) {\n  if (Array.isArray(value)) {\n    return value.map((set, index) => {\n      if (Array.isArray(set)) {\n        if (set.length > 2) {\n          logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${index}]`, set);\n        }\n        return accessSetify(set[0], set[1]);\n      }\n      return accessSetify(set.address, set.storageKeys);\n    });\n  }\n  const result = Object.keys(value).map(addr => {\n    const storageKeys = value[addr].reduce((accum, storageKey) => {\n      accum[storageKey] = true;\n      return accum;\n    }, {});\n    return accessSetify(addr, Object.keys(storageKeys).sort());\n  });\n  result.sort((a, b) => a.address.localeCompare(b.address));\n  return result;\n}\nfunction formatAccessList(value) {\n  return accessListify(value).map(set => [set.address, set.storageKeys]);\n}\nfunction _serializeEip2930(transaction, signature) {\n  const fields = [formatNumber(transaction.chainId || 0, \"chainId\"), formatNumber(transaction.nonce || 0, \"nonce\"), formatNumber(transaction.gasPrice || 0, \"gasPrice\"), formatNumber(transaction.gasLimit || 0, \"gasLimit\"), transaction.to != null ? getAddress(transaction.to) : \"0x\", formatNumber(transaction.value || 0, \"value\"), transaction.data || \"0x\", formatAccessList(transaction.accessList || [])];\n  if (signature) {\n    const sig = splitSignature(signature);\n    fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n    fields.push(stripZeros(sig.r));\n    fields.push(stripZeros(sig.s));\n  }\n  return hexConcat([\"0x01\", RLP.encode(fields)]);\n}\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction, signature) {\n  checkProperties(transaction, allowedTransactionKeys);\n  const raw = [];\n  transactionFields.forEach(function (fieldInfo) {\n    let value = transaction[fieldInfo.name] || [];\n    const options = {};\n    if (fieldInfo.numeric) {\n      options.hexPad = \"left\";\n    }\n    value = arrayify(hexlify(value, options));\n    // Fixed-width field\n    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n      logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n    }\n    // Variable-width (with a maximum)\n    if (fieldInfo.maxLength) {\n      value = stripZeros(value);\n      if (value.length > fieldInfo.maxLength) {\n        logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, \"transaction:\" + fieldInfo.name, value);\n      }\n    }\n    raw.push(hexlify(value));\n  });\n  let chainId = 0;\n  if (transaction.chainId != null) {\n    // A chainId was provided; if non-zero we'll use EIP-155\n    chainId = transaction.chainId;\n    if (typeof chainId !== \"number\") {\n      logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n    }\n  } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n    // No chainId provided, but the signature is signing with EIP-155; derive chainId\n    chainId = Math.floor((signature.v - 35) / 2);\n  }\n  // We have an EIP-155 transaction (chainId was specified and non-zero)\n  if (chainId !== 0) {\n    raw.push(hexlify(chainId)); // @TODO: hexValue?\n    raw.push(\"0x\");\n    raw.push(\"0x\");\n  }\n  // Requesting an unsigned transation\n  if (!signature) {\n    return RLP.encode(raw);\n  }\n  // The splitSignature will ensure the transaction has a recoveryParam in the\n  // case that the signTransaction function only adds a v.\n  const sig = splitSignature(signature);\n  // We pushed a chainId and null r, s on for hashing only; remove those\n  let v = 27 + sig.recoveryParam;\n  if (chainId !== 0) {\n    raw.pop();\n    raw.pop();\n    raw.pop();\n    v += chainId * 2 + 8;\n    // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n    if (sig.v > 28 && sig.v !== v) {\n      logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n  } else if (sig.v !== v) {\n    logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n  }\n  raw.push(hexlify(v));\n  raw.push(stripZeros(arrayify(sig.r)));\n  raw.push(stripZeros(arrayify(sig.s)));\n  return RLP.encode(raw);\n}\nexport function serialize(transaction, signature) {\n  // Legacy and EIP-155 Transactions\n  if (transaction.type == null) {\n    if (transaction.accessList != null) {\n      logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n    }\n    return _serialize(transaction, signature);\n  }\n  // Typed Transactions (EIP-2718)\n  switch (transaction.type) {\n    case 1:\n      return _serializeEip2930(transaction, signature);\n    default:\n      break;\n  }\n  return logger.throwError(`unsupported transaction type: ${transaction.type}`, Logger.errors.UNSUPPORTED_OPERATION, {\n    operation: \"serializeTransaction\",\n    transactionType: transaction.type\n  });\n}\nfunction _parseEip2930(payload) {\n  const transaction = RLP.decode(payload.slice(1));\n  if (transaction.length !== 8 && transaction.length !== 11) {\n    logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n  }\n  const tx = {\n    type: 1,\n    chainId: handleNumber(transaction[0]).toNumber(),\n    nonce: handleNumber(transaction[1]).toNumber(),\n    gasPrice: handleNumber(transaction[2]),\n    gasLimit: handleNumber(transaction[3]),\n    to: handleAddress(transaction[4]),\n    value: handleNumber(transaction[5]),\n    data: transaction[6],\n    accessList: accessListify(transaction[7])\n  };\n  // Unsigned EIP-2930 Transaction\n  if (transaction.length === 8) {\n    return tx;\n  }\n  try {\n    const recid = handleNumber(transaction[8]).toNumber();\n    if (recid !== 0 && recid !== 1) {\n      throw new Error(\"bad recid\");\n    }\n    tx.v = recid;\n  } catch (error) {\n    logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", transaction[8]);\n  }\n  tx.r = hexZeroPad(transaction[9], 32);\n  tx.s = hexZeroPad(transaction[10], 32);\n  try {\n    const digest = keccak256(_serializeEip2930(tx));\n    tx.from = recoverAddress(digest, {\n      r: tx.r,\n      s: tx.s,\n      recoveryParam: tx.v\n    });\n  } catch (error) {\n    console.log(error);\n  }\n  tx.hash = keccak256(payload);\n  return tx;\n}\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction) {\n  const transaction = RLP.decode(rawTransaction);\n  if (transaction.length !== 9 && transaction.length !== 6) {\n    logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n  }\n  const tx = {\n    nonce: handleNumber(transaction[0]).toNumber(),\n    gasPrice: handleNumber(transaction[1]),\n    gasLimit: handleNumber(transaction[2]),\n    to: handleAddress(transaction[3]),\n    value: handleNumber(transaction[4]),\n    data: transaction[5],\n    chainId: 0\n  };\n  // Legacy unsigned transaction\n  if (transaction.length === 6) {\n    return tx;\n  }\n  try {\n    tx.v = BigNumber.from(transaction[6]).toNumber();\n  } catch (error) {\n    console.log(error);\n    return tx;\n  }\n  tx.r = hexZeroPad(transaction[7], 32);\n  tx.s = hexZeroPad(transaction[8], 32);\n  if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n    // EIP-155 unsigned transaction\n    tx.chainId = tx.v;\n    tx.v = 0;\n  } else {\n    // Signed Tranasaction\n    tx.chainId = Math.floor((tx.v - 35) / 2);\n    if (tx.chainId < 0) {\n      tx.chainId = 0;\n    }\n    let recoveryParam = tx.v - 27;\n    const raw = transaction.slice(0, 6);\n    if (tx.chainId !== 0) {\n      raw.push(hexlify(tx.chainId));\n      raw.push(\"0x\");\n      raw.push(\"0x\");\n      recoveryParam -= tx.chainId * 2 + 8;\n    }\n    const digest = keccak256(RLP.encode(raw));\n    try {\n      tx.from = recoverAddress(digest, {\n        r: hexlify(tx.r),\n        s: hexlify(tx.s),\n        recoveryParam: recoveryParam\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    tx.hash = keccak256(rawTransaction);\n  }\n  tx.type = null;\n  return tx;\n}\nexport function parse(rawTransaction) {\n  const payload = arrayify(rawTransaction);\n  // Legacy and EIP-155 Transactions\n  if (payload[0] > 0x7f) {\n    return _parse(payload);\n  }\n  // Typed Transaction (EIP-2718)\n  switch (payload[0]) {\n    case 1:\n      return _parseEip2930(payload);\n    default:\n      break;\n  }\n  return logger.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {\n    operation: \"parseTransaction\",\n    transactionType: payload[0]\n  });\n}","map":{"version":3,"names":["getAddress","BigNumber","arrayify","hexConcat","hexDataLength","hexDataSlice","hexlify","hexZeroPad","isBytesLike","splitSignature","stripZeros","Zero","keccak256","checkProperties","RLP","computePublicKey","recoverPublicKey","Logger","version","logger","handleAddress","value","handleNumber","from","transactionFields","name","maxLength","numeric","length","allowedTransactionKeys","chainId","data","gasLimit","gasPrice","nonce","to","computeAddress","key","publicKey","recoverAddress","digest","signature","formatNumber","result","toHexString","throwArgumentError","accessSetify","addr","storageKeys","address","map","storageKey","index","toLowerCase","accessListify","Array","isArray","set","Object","keys","reduce","accum","sort","a","b","localeCompare","formatAccessList","_serializeEip2930","transaction","fields","accessList","sig","push","recoveryParam","r","s","encode","_serialize","raw","forEach","fieldInfo","options","hexPad","v","Math","floor","pop","serialize","type","throwError","errors","UNSUPPORTED_OPERATION","operation","transactionType","_parseEip2930","payload","decode","slice","tx","toNumber","recid","Error","error","console","log","hash","_parse","rawTransaction","isZero","parse"],"sources":["../src.ts/index.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}