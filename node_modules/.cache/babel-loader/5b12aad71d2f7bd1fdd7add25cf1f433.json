{"ast":null,"code":"var capability = require('./capability');\nvar inherits = require('inherits');\nvar response = require('./response');\nvar stream = require('readable-stream');\nvar toArrayBuffer = require('to-arraybuffer');\nvar IncomingMessage = response.IncomingMessage;\nvar rStates = response.readyStates;\nfunction decideMode(preferBinary, useFetch) {\n  if (capability.fetch && useFetch) {\n    return 'fetch';\n  } else if (capability.mozchunkedarraybuffer) {\n    return 'moz-chunked-arraybuffer';\n  } else if (capability.msstream) {\n    return 'ms-stream';\n  } else if (capability.arraybuffer && preferBinary) {\n    return 'arraybuffer';\n  } else if (capability.vbArray && preferBinary) {\n    return 'text:vbarray';\n  } else {\n    return 'text';\n  }\n}\nvar ClientRequest = module.exports = function (opts) {\n  var self = this;\n  stream.Writable.call(self);\n  self._opts = opts;\n  self._body = [];\n  self._headers = {};\n  if (opts.auth) self.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'));\n  Object.keys(opts.headers).forEach(function (name) {\n    self.setHeader(name, opts.headers[name]);\n  });\n  var preferBinary;\n  var useFetch = true;\n  if (opts.mode === 'disable-fetch' || 'requestTimeout' in opts && !capability.abortController) {\n    // If the use of XHR should be preferred. Not typically needed.\n    useFetch = false;\n    preferBinary = true;\n  } else if (opts.mode === 'prefer-streaming') {\n    // If streaming is a high priority but binary compatibility and\n    // the accuracy of the 'content-type' header aren't\n    preferBinary = false;\n  } else if (opts.mode === 'allow-wrong-content-type') {\n    // If streaming is more important than preserving the 'content-type' header\n    preferBinary = !capability.overrideMimeType;\n  } else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n    // Use binary if text streaming may corrupt data or the content-type header, or for speed\n    preferBinary = true;\n  } else {\n    throw new Error('Invalid value for opts.mode');\n  }\n  self._mode = decideMode(preferBinary, useFetch);\n  self._fetchTimer = null;\n  self.on('finish', function () {\n    self._onFinish();\n  });\n};\ninherits(ClientRequest, stream.Writable);\nClientRequest.prototype.setHeader = function (name, value) {\n  var self = this;\n  var lowerName = name.toLowerCase();\n  // This check is not necessary, but it prevents warnings from browsers about setting unsafe\n  // headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n  // http-browserify did it, so I will too.\n  if (unsafeHeaders.indexOf(lowerName) !== -1) return;\n  self._headers[lowerName] = {\n    name: name,\n    value: value\n  };\n};\nClientRequest.prototype.getHeader = function (name) {\n  var header = this._headers[name.toLowerCase()];\n  if (header) return header.value;\n  return null;\n};\nClientRequest.prototype.removeHeader = function (name) {\n  var self = this;\n  delete self._headers[name.toLowerCase()];\n};\nClientRequest.prototype._onFinish = function () {\n  var self = this;\n  if (self._destroyed) return;\n  var opts = self._opts;\n  var headersObj = self._headers;\n  var body = null;\n  if (opts.method !== 'GET' && opts.method !== 'HEAD') {\n    if (capability.arraybuffer) {\n      body = toArrayBuffer(Buffer.concat(self._body));\n    } else if (capability.blobConstructor) {\n      body = new global.Blob(self._body.map(function (buffer) {\n        return toArrayBuffer(buffer);\n      }), {\n        type: (headersObj['content-type'] || {}).value || ''\n      });\n    } else {\n      // get utf8 string\n      body = Buffer.concat(self._body).toString();\n    }\n  }\n\n  // create flattened list of headers\n  var headersList = [];\n  Object.keys(headersObj).forEach(function (keyName) {\n    var name = headersObj[keyName].name;\n    var value = headersObj[keyName].value;\n    if (Array.isArray(value)) {\n      value.forEach(function (v) {\n        headersList.push([name, v]);\n      });\n    } else {\n      headersList.push([name, value]);\n    }\n  });\n  if (self._mode === 'fetch') {\n    var signal = null;\n    var fetchTimer = null;\n    if (capability.abortController) {\n      var controller = new AbortController();\n      signal = controller.signal;\n      self._fetchAbortController = controller;\n      if ('requestTimeout' in opts && opts.requestTimeout !== 0) {\n        self._fetchTimer = global.setTimeout(function () {\n          self.emit('requestTimeout');\n          if (self._fetchAbortController) self._fetchAbortController.abort();\n        }, opts.requestTimeout);\n      }\n    }\n    global.fetch(self._opts.url, {\n      method: self._opts.method,\n      headers: headersList,\n      body: body || undefined,\n      mode: 'cors',\n      credentials: opts.withCredentials ? 'include' : 'same-origin',\n      signal: signal\n    }).then(function (response) {\n      self._fetchResponse = response;\n      self._connect();\n    }, function (reason) {\n      global.clearTimeout(self._fetchTimer);\n      if (!self._destroyed) self.emit('error', reason);\n    });\n  } else {\n    var xhr = self._xhr = new global.XMLHttpRequest();\n    try {\n      xhr.open(self._opts.method, self._opts.url, true);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    }\n\n    // Can't set responseType on really old browsers\n    if ('responseType' in xhr) xhr.responseType = self._mode.split(':')[0];\n    if ('withCredentials' in xhr) xhr.withCredentials = !!opts.withCredentials;\n    if (self._mode === 'text' && 'overrideMimeType' in xhr) xhr.overrideMimeType('text/plain; charset=x-user-defined');\n    if ('requestTimeout' in opts) {\n      xhr.timeout = opts.requestTimeout;\n      xhr.ontimeout = function () {\n        self.emit('requestTimeout');\n      };\n    }\n    headersList.forEach(function (header) {\n      xhr.setRequestHeader(header[0], header[1]);\n    });\n    self._response = null;\n    xhr.onreadystatechange = function () {\n      switch (xhr.readyState) {\n        case rStates.LOADING:\n        case rStates.DONE:\n          self._onXHRProgress();\n          break;\n      }\n    };\n    // Necessary for streaming in Firefox, since xhr.response is ONLY defined\n    // in onprogress, not in onreadystatechange with xhr.readyState = 3\n    if (self._mode === 'moz-chunked-arraybuffer') {\n      xhr.onprogress = function () {\n        self._onXHRProgress();\n      };\n    }\n    xhr.onerror = function () {\n      if (self._destroyed) return;\n      self.emit('error', new Error('XHR error'));\n    };\n    try {\n      xhr.send(body);\n    } catch (err) {\n      process.nextTick(function () {\n        self.emit('error', err);\n      });\n      return;\n    }\n  }\n};\n\n/**\r\n * Checks if xhr.status is readable and non-zero, indicating no error.\r\n * Even though the spec says it should be available in readyState 3,\r\n * accessing it throws an exception in IE8\r\n */\nfunction statusValid(xhr) {\n  try {\n    var status = xhr.status;\n    return status !== null && status !== 0;\n  } catch (e) {\n    return false;\n  }\n}\nClientRequest.prototype._onXHRProgress = function () {\n  var self = this;\n  if (!statusValid(self._xhr) || self._destroyed) return;\n  if (!self._response) self._connect();\n  self._response._onXHRProgress();\n};\nClientRequest.prototype._connect = function () {\n  var self = this;\n  if (self._destroyed) return;\n  self._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer);\n  self._response.on('error', function (err) {\n    self.emit('error', err);\n  });\n  self.emit('response', self._response);\n};\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n  var self = this;\n  self._body.push(chunk);\n  cb();\n};\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n  var self = this;\n  self._destroyed = true;\n  global.clearTimeout(self._fetchTimer);\n  if (self._response) self._response._destroyed = true;\n  if (self._xhr) self._xhr.abort();else if (self._fetchAbortController) self._fetchAbortController.abort();\n};\nClientRequest.prototype.end = function (data, encoding, cb) {\n  var self = this;\n  if (typeof data === 'function') {\n    cb = data;\n    data = undefined;\n  }\n  stream.Writable.prototype.end.call(self, data, encoding, cb);\n};\nClientRequest.prototype.flushHeaders = function () {};\nClientRequest.prototype.setTimeout = function () {};\nClientRequest.prototype.setNoDelay = function () {};\nClientRequest.prototype.setSocketKeepAlive = function () {};\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = ['accept-charset', 'accept-encoding', 'access-control-request-headers', 'access-control-request-method', 'connection', 'content-length', 'cookie', 'cookie2', 'date', 'dnt', 'expect', 'host', 'keep-alive', 'origin', 'referer', 'te', 'trailer', 'transfer-encoding', 'upgrade', 'via'];","map":{"version":3,"names":["capability","require","inherits","response","stream","toArrayBuffer","IncomingMessage","rStates","readyStates","decideMode","preferBinary","useFetch","fetch","mozchunkedarraybuffer","msstream","arraybuffer","vbArray","ClientRequest","module","exports","opts","self","Writable","call","_opts","_body","_headers","auth","setHeader","Buffer","toString","Object","keys","headers","forEach","name","mode","abortController","overrideMimeType","Error","_mode","_fetchTimer","on","_onFinish","prototype","value","lowerName","toLowerCase","unsafeHeaders","indexOf","getHeader","header","removeHeader","_destroyed","headersObj","body","method","concat","blobConstructor","global","Blob","map","buffer","type","headersList","keyName","Array","isArray","v","push","signal","fetchTimer","controller","AbortController","_fetchAbortController","requestTimeout","setTimeout","emit","abort","url","undefined","credentials","withCredentials","then","_fetchResponse","_connect","reason","clearTimeout","xhr","_xhr","XMLHttpRequest","open","err","process","nextTick","responseType","split","timeout","ontimeout","setRequestHeader","_response","onreadystatechange","readyState","LOADING","DONE","_onXHRProgress","onprogress","onerror","send","statusValid","status","e","_write","chunk","encoding","cb","destroy","end","data","flushHeaders","setNoDelay","setSocketKeepAlive"],"sources":["F:/Farmers_Marketplace1/node_modules/stream-http/lib/request.js"],"sourcesContent":["var capability = require('./capability')\r\nvar inherits = require('inherits')\r\nvar response = require('./response')\r\nvar stream = require('readable-stream')\r\nvar toArrayBuffer = require('to-arraybuffer')\r\n\r\nvar IncomingMessage = response.IncomingMessage\r\nvar rStates = response.readyStates\r\n\r\nfunction decideMode (preferBinary, useFetch) {\r\n\tif (capability.fetch && useFetch) {\r\n\t\treturn 'fetch'\r\n\t} else if (capability.mozchunkedarraybuffer) {\r\n\t\treturn 'moz-chunked-arraybuffer'\r\n\t} else if (capability.msstream) {\r\n\t\treturn 'ms-stream'\r\n\t} else if (capability.arraybuffer && preferBinary) {\r\n\t\treturn 'arraybuffer'\r\n\t} else if (capability.vbArray && preferBinary) {\r\n\t\treturn 'text:vbarray'\r\n\t} else {\r\n\t\treturn 'text'\r\n\t}\r\n}\r\n\r\nvar ClientRequest = module.exports = function (opts) {\r\n\tvar self = this\r\n\tstream.Writable.call(self)\r\n\r\n\tself._opts = opts\r\n\tself._body = []\r\n\tself._headers = {}\r\n\tif (opts.auth)\r\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\r\n\tObject.keys(opts.headers).forEach(function (name) {\r\n\t\tself.setHeader(name, opts.headers[name])\r\n\t})\r\n\r\n\tvar preferBinary\r\n\tvar useFetch = true\r\n\tif (opts.mode === 'disable-fetch' || ('requestTimeout' in opts && !capability.abortController)) {\r\n\t\t// If the use of XHR should be preferred. Not typically needed.\r\n\t\tuseFetch = false\r\n\t\tpreferBinary = true\r\n\t} else if (opts.mode === 'prefer-streaming') {\r\n\t\t// If streaming is a high priority but binary compatibility and\r\n\t\t// the accuracy of the 'content-type' header aren't\r\n\t\tpreferBinary = false\r\n\t} else if (opts.mode === 'allow-wrong-content-type') {\r\n\t\t// If streaming is more important than preserving the 'content-type' header\r\n\t\tpreferBinary = !capability.overrideMimeType\r\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\r\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\r\n\t\tpreferBinary = true\r\n\t} else {\r\n\t\tthrow new Error('Invalid value for opts.mode')\r\n\t}\r\n\tself._mode = decideMode(preferBinary, useFetch)\r\n\tself._fetchTimer = null\r\n\r\n\tself.on('finish', function () {\r\n\t\tself._onFinish()\r\n\t})\r\n}\r\n\r\ninherits(ClientRequest, stream.Writable)\r\n\r\nClientRequest.prototype.setHeader = function (name, value) {\r\n\tvar self = this\r\n\tvar lowerName = name.toLowerCase()\r\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\r\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\r\n\t// http-browserify did it, so I will too.\r\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\r\n\t\treturn\r\n\r\n\tself._headers[lowerName] = {\r\n\t\tname: name,\r\n\t\tvalue: value\r\n\t}\r\n}\r\n\r\nClientRequest.prototype.getHeader = function (name) {\r\n\tvar header = this._headers[name.toLowerCase()]\r\n\tif (header)\r\n\t\treturn header.value\r\n\treturn null\r\n}\r\n\r\nClientRequest.prototype.removeHeader = function (name) {\r\n\tvar self = this\r\n\tdelete self._headers[name.toLowerCase()]\r\n}\r\n\r\nClientRequest.prototype._onFinish = function () {\r\n\tvar self = this\r\n\r\n\tif (self._destroyed)\r\n\t\treturn\r\n\tvar opts = self._opts\r\n\r\n\tvar headersObj = self._headers\r\n\tvar body = null\r\n\tif (opts.method !== 'GET' && opts.method !== 'HEAD') {\r\n\t\tif (capability.arraybuffer) {\r\n\t\t\tbody = toArrayBuffer(Buffer.concat(self._body))\r\n\t\t} else if (capability.blobConstructor) {\r\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\r\n\t\t\t\treturn toArrayBuffer(buffer)\r\n\t\t\t}), {\r\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\t// get utf8 string\r\n\t\t\tbody = Buffer.concat(self._body).toString()\r\n\t\t}\r\n\t}\r\n\r\n\t// create flattened list of headers\r\n\tvar headersList = []\r\n\tObject.keys(headersObj).forEach(function (keyName) {\r\n\t\tvar name = headersObj[keyName].name\r\n\t\tvar value = headersObj[keyName].value\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tvalue.forEach(function (v) {\r\n\t\t\t\theadersList.push([name, v])\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\theadersList.push([name, value])\r\n\t\t}\r\n\t})\r\n\r\n\tif (self._mode === 'fetch') {\r\n\t\tvar signal = null\r\n\t\tvar fetchTimer = null\r\n\t\tif (capability.abortController) {\r\n\t\t\tvar controller = new AbortController()\r\n\t\t\tsignal = controller.signal\r\n\t\t\tself._fetchAbortController = controller\r\n\r\n\t\t\tif ('requestTimeout' in opts && opts.requestTimeout !== 0) {\r\n\t\t\t\tself._fetchTimer = global.setTimeout(function () {\r\n\t\t\t\t\tself.emit('requestTimeout')\r\n\t\t\t\t\tif (self._fetchAbortController)\r\n\t\t\t\t\t\tself._fetchAbortController.abort()\r\n\t\t\t\t}, opts.requestTimeout)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tglobal.fetch(self._opts.url, {\r\n\t\t\tmethod: self._opts.method,\r\n\t\t\theaders: headersList,\r\n\t\t\tbody: body || undefined,\r\n\t\t\tmode: 'cors',\r\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin',\r\n\t\t\tsignal: signal\r\n\t\t}).then(function (response) {\r\n\t\t\tself._fetchResponse = response\r\n\t\t\tself._connect()\r\n\t\t}, function (reason) {\r\n\t\t\tglobal.clearTimeout(self._fetchTimer)\r\n\t\t\tif (!self._destroyed)\r\n\t\t\t\tself.emit('error', reason)\r\n\t\t})\r\n\t} else {\r\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\r\n\t\ttry {\r\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\r\n\t\t} catch (err) {\r\n\t\t\tprocess.nextTick(function () {\r\n\t\t\t\tself.emit('error', err)\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// Can't set responseType on really old browsers\r\n\t\tif ('responseType' in xhr)\r\n\t\t\txhr.responseType = self._mode.split(':')[0]\r\n\r\n\t\tif ('withCredentials' in xhr)\r\n\t\t\txhr.withCredentials = !!opts.withCredentials\r\n\r\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\r\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\r\n\r\n\t\tif ('requestTimeout' in opts) {\r\n\t\t\txhr.timeout = opts.requestTimeout\r\n\t\t\txhr.ontimeout = function () {\r\n\t\t\t\tself.emit('requestTimeout')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\theadersList.forEach(function (header) {\r\n\t\t\txhr.setRequestHeader(header[0], header[1])\r\n\t\t})\r\n\r\n\t\tself._response = null\r\n\t\txhr.onreadystatechange = function () {\r\n\t\t\tswitch (xhr.readyState) {\r\n\t\t\t\tcase rStates.LOADING:\r\n\t\t\t\tcase rStates.DONE:\r\n\t\t\t\t\tself._onXHRProgress()\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\r\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\r\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\r\n\t\t\txhr.onprogress = function () {\r\n\t\t\t\tself._onXHRProgress()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\txhr.onerror = function () {\r\n\t\t\tif (self._destroyed)\r\n\t\t\t\treturn\r\n\t\t\tself.emit('error', new Error('XHR error'))\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\txhr.send(body)\r\n\t\t} catch (err) {\r\n\t\t\tprocess.nextTick(function () {\r\n\t\t\t\tself.emit('error', err)\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if xhr.status is readable and non-zero, indicating no error.\r\n * Even though the spec says it should be available in readyState 3,\r\n * accessing it throws an exception in IE8\r\n */\r\nfunction statusValid (xhr) {\r\n\ttry {\r\n\t\tvar status = xhr.status\r\n\t\treturn (status !== null && status !== 0)\r\n\t} catch (e) {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nClientRequest.prototype._onXHRProgress = function () {\r\n\tvar self = this\r\n\r\n\tif (!statusValid(self._xhr) || self._destroyed)\r\n\t\treturn\r\n\r\n\tif (!self._response)\r\n\t\tself._connect()\r\n\r\n\tself._response._onXHRProgress()\r\n}\r\n\r\nClientRequest.prototype._connect = function () {\r\n\tvar self = this\r\n\r\n\tif (self._destroyed)\r\n\t\treturn\r\n\r\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode, self._fetchTimer)\r\n\tself._response.on('error', function(err) {\r\n\t\tself.emit('error', err)\r\n\t})\r\n\r\n\tself.emit('response', self._response)\r\n}\r\n\r\nClientRequest.prototype._write = function (chunk, encoding, cb) {\r\n\tvar self = this\r\n\r\n\tself._body.push(chunk)\r\n\tcb()\r\n}\r\n\r\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\r\n\tvar self = this\r\n\tself._destroyed = true\r\n\tglobal.clearTimeout(self._fetchTimer)\r\n\tif (self._response)\r\n\t\tself._response._destroyed = true\r\n\tif (self._xhr)\r\n\t\tself._xhr.abort()\r\n\telse if (self._fetchAbortController)\r\n\t\tself._fetchAbortController.abort()\r\n}\r\n\r\nClientRequest.prototype.end = function (data, encoding, cb) {\r\n\tvar self = this\r\n\tif (typeof data === 'function') {\r\n\t\tcb = data\r\n\t\tdata = undefined\r\n\t}\r\n\r\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\r\n}\r\n\r\nClientRequest.prototype.flushHeaders = function () {}\r\nClientRequest.prototype.setTimeout = function () {}\r\nClientRequest.prototype.setNoDelay = function () {}\r\nClientRequest.prototype.setSocketKeepAlive = function () {}\r\n\r\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\r\nvar unsafeHeaders = [\r\n\t'accept-charset',\r\n\t'accept-encoding',\r\n\t'access-control-request-headers',\r\n\t'access-control-request-method',\r\n\t'connection',\r\n\t'content-length',\r\n\t'cookie',\r\n\t'cookie2',\r\n\t'date',\r\n\t'dnt',\r\n\t'expect',\r\n\t'host',\r\n\t'keep-alive',\r\n\t'origin',\r\n\t'referer',\r\n\t'te',\r\n\t'trailer',\r\n\t'transfer-encoding',\r\n\t'upgrade',\r\n\t'via'\r\n]\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}