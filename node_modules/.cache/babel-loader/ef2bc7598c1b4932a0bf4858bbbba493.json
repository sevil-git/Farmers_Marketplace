{"ast":null,"code":"/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\nconst requestManager = require(\"web3-core-requestmanager\");\nconst extend = require(\"./extend\");\nconst packageInit = (pkg, args) => {\n  args = Array.prototype.slice.call(args);\n  if (!pkg) {\n    throw new Error('You need to instantiate using the \"new\" keyword.');\n  }\n  // make property of pkg._provider, which can properly set providers\n  Object.defineProperty(pkg, 'currentProvider', {\n    get: () => {\n      return pkg._provider;\n    },\n    set: value => {\n      return pkg.setProvider(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  // inherit from parent package or create a new RequestManager\n  if (args[0] && args[0]._requestManager) {\n    pkg._requestManager = args[0]._requestManager;\n  } else {\n    pkg._requestManager = new requestManager.Manager(args[0], args[1]);\n  }\n  // add givenProvider\n  pkg.givenProvider = requestManager.Manager.givenProvider;\n  pkg.providers = requestManager.Manager.providers;\n  pkg._provider = pkg._requestManager.provider;\n  // add SETPROVIDER function (don't overwrite if already existing)\n  if (!pkg.setProvider) {\n    pkg.setProvider = (provider, net) => {\n      pkg._requestManager.setProvider(provider, net);\n      pkg._provider = pkg._requestManager.provider;\n      return true;\n    };\n  }\n  pkg.setRequestManager = manager => {\n    pkg._requestManager = manager;\n    pkg._provider = manager.provider;\n  };\n  // attach batch request creation\n  pkg.BatchRequest = requestManager.BatchManager.bind(null, pkg._requestManager);\n  // attach extend function\n  pkg.extend = extend(pkg);\n};\nconst addProviders = pkg => {\n  pkg.givenProvider = requestManager.Manager.givenProvider;\n  pkg.providers = requestManager.Manager.providers;\n};\nmodule.exports = {\n  packageInit,\n  addProviders\n};","map":{"version":3,"names":["requestManager","require","extend","packageInit","pkg","args","Array","prototype","slice","call","Error","Object","defineProperty","get","_provider","set","value","setProvider","enumerable","configurable","_requestManager","Manager","givenProvider","providers","provider","net","setRequestManager","manager","BatchRequest","BatchManager","bind","addProviders","module","exports"],"sources":["F:/Farmers_Marketplace1/node_modules/web3-core/lib/index.js"],"sourcesContent":["/*\r\n    This file is part of web3.js.\r\n\r\n    web3.js is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Lesser General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    web3.js is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Lesser General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Lesser General Public License\r\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\r\n*/\r\n/**\r\n * @file index.js\r\n * @author Fabian Vogelsteller <fabian@ethereum.org>\r\n * @date 2017\r\n */\r\nconst requestManager = require(\"web3-core-requestmanager\");\r\nconst extend = require(\"./extend\");\r\nconst packageInit = (pkg, args) => {\r\n    args = Array.prototype.slice.call(args);\r\n    if (!pkg) {\r\n        throw new Error('You need to instantiate using the \"new\" keyword.');\r\n    }\r\n    // make property of pkg._provider, which can properly set providers\r\n    Object.defineProperty(pkg, 'currentProvider', {\r\n        get: () => {\r\n            return pkg._provider;\r\n        },\r\n        set: (value) => {\r\n            return pkg.setProvider(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // inherit from parent package or create a new RequestManager\r\n    if (args[0] && args[0]._requestManager) {\r\n        pkg._requestManager = args[0]._requestManager;\r\n    }\r\n    else {\r\n        pkg._requestManager = new requestManager.Manager(args[0], args[1]);\r\n    }\r\n    // add givenProvider\r\n    pkg.givenProvider = requestManager.Manager.givenProvider;\r\n    pkg.providers = requestManager.Manager.providers;\r\n    pkg._provider = pkg._requestManager.provider;\r\n    // add SETPROVIDER function (don't overwrite if already existing)\r\n    if (!pkg.setProvider) {\r\n        pkg.setProvider = (provider, net) => {\r\n            pkg._requestManager.setProvider(provider, net);\r\n            pkg._provider = pkg._requestManager.provider;\r\n            return true;\r\n        };\r\n    }\r\n    pkg.setRequestManager = (manager) => {\r\n        pkg._requestManager = manager;\r\n        pkg._provider = manager.provider;\r\n    };\r\n    // attach batch request creation\r\n    pkg.BatchRequest = requestManager.BatchManager.bind(null, pkg._requestManager);\r\n    // attach extend function\r\n    pkg.extend = extend(pkg);\r\n};\r\nconst addProviders = (pkg) => {\r\n    pkg.givenProvider = requestManager.Manager.givenProvider;\r\n    pkg.providers = requestManager.Manager.providers;\r\n};\r\nmodule.exports = {\r\n    packageInit,\r\n    addProviders\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,cAAc,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,MAAME,WAAW,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EAC/BA,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,IAAI,CAAC;EACvC,IAAI,CAACD,GAAG,EAAE;IACN,MAAM,IAAIM,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA;EACAC,MAAM,CAACC,cAAc,CAACR,GAAG,EAAE,iBAAiB,EAAE;IAC1CS,GAAG,EAAEA,CAAA,KAAM;MACP,OAAOT,GAAG,CAACU,SAAS;IACxB,CAAC;IACDC,GAAG,EAAGC,KAAK,IAAK;MACZ,OAAOZ,GAAG,CAACa,WAAW,CAACD,KAAK,CAAC;IACjC,CAAC;IACDE,UAAU,EAAE,IAAI;IAChBC,YAAY,EAAE;EAClB,CAAC,CAAC;EACF;EACA,IAAId,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,CAACe,eAAe,EAAE;IACpChB,GAAG,CAACgB,eAAe,GAAGf,IAAI,CAAC,CAAC,CAAC,CAACe,eAAe;EACjD,CAAC,MACI;IACDhB,GAAG,CAACgB,eAAe,GAAG,IAAIpB,cAAc,CAACqB,OAAO,CAAChB,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;EACtE;EACA;EACAD,GAAG,CAACkB,aAAa,GAAGtB,cAAc,CAACqB,OAAO,CAACC,aAAa;EACxDlB,GAAG,CAACmB,SAAS,GAAGvB,cAAc,CAACqB,OAAO,CAACE,SAAS;EAChDnB,GAAG,CAACU,SAAS,GAAGV,GAAG,CAACgB,eAAe,CAACI,QAAQ;EAC5C;EACA,IAAI,CAACpB,GAAG,CAACa,WAAW,EAAE;IAClBb,GAAG,CAACa,WAAW,GAAG,CAACO,QAAQ,EAAEC,GAAG,KAAK;MACjCrB,GAAG,CAACgB,eAAe,CAACH,WAAW,CAACO,QAAQ,EAAEC,GAAG,CAAC;MAC9CrB,GAAG,CAACU,SAAS,GAAGV,GAAG,CAACgB,eAAe,CAACI,QAAQ;MAC5C,OAAO,IAAI;IACf,CAAC;EACL;EACApB,GAAG,CAACsB,iBAAiB,GAAIC,OAAO,IAAK;IACjCvB,GAAG,CAACgB,eAAe,GAAGO,OAAO;IAC7BvB,GAAG,CAACU,SAAS,GAAGa,OAAO,CAACH,QAAQ;EACpC,CAAC;EACD;EACApB,GAAG,CAACwB,YAAY,GAAG5B,cAAc,CAAC6B,YAAY,CAACC,IAAI,CAAC,IAAI,EAAE1B,GAAG,CAACgB,eAAe,CAAC;EAC9E;EACAhB,GAAG,CAACF,MAAM,GAAGA,MAAM,CAACE,GAAG,CAAC;AAC5B,CAAC;AACD,MAAM2B,YAAY,GAAI3B,GAAG,IAAK;EAC1BA,GAAG,CAACkB,aAAa,GAAGtB,cAAc,CAACqB,OAAO,CAACC,aAAa;EACxDlB,GAAG,CAACmB,SAAS,GAAGvB,cAAc,CAACqB,OAAO,CAACE,SAAS;AACpD,CAAC;AACDS,MAAM,CAACC,OAAO,GAAG;EACb9B,WAAW;EACX4B;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script"}